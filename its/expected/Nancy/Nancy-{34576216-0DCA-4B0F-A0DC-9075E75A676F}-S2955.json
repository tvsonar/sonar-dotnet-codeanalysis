{
"version":  "0.1",
"toolInfo":  {
"toolName":  "Microsoft (R) Visual C# Compiler",
"productVersion":  "1.1.0",
"fileVersion":  "1.1.0"
},
"issues":  [
{
"ruleId":  "S2955",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy\\Responses\\JsonResponse.cs",
"region":  {
"startLine":  31,
"startColumn":  37,
"endLine":  31,
"endColumn":  41
}
}
]
}
],
"shortMessage":  "Use a comparison to \"default(TModel)\" instead or add a constraint to \"TModel\" so that it can\u0027t be a value type.",
"fullMessage":  "When constraints have not been applied to restrict a generic type parameter to be a reference type, then a value type, such as a \"struct\", could also be passed. In such cases, comparing the type parameter to \"null\" would always be false, because a \"struct\" can be empty, but never \"null\". If a value type is truly what\u0027s expected, then the comparison should use \"default()\". If it\u0027s not, then constraints should be added so that no value type can be passed.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Generic parameters not constrained to reference types should not be compared to \"null\"",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.7.0\u0026ruleId=S2955",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
}
]
}
